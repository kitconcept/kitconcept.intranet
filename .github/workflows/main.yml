name: "kitconcept.intranet: CI"
description: "Main workflow for kitconcept.intranet"

on:
  push:
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/*.yml"
      - "devops/**"
  workflow_dispatch:

jobs:

  config:
    name: "Config: Compute values used in workflow"
    uses: ./.github/workflows/config.yml

  backend:
    uses: ./.github/workflows/backend.yml
    needs:
        - config
    with:
        base-tag: ${{ needs.config.outputs.base-tag }}
        image-name-prefix: ${{ needs.config.outputs.image-name-prefix }}
        image-name-suffix: backend
        python-version: ${{ needs.config.outputs.python-version }}
        kc-version: ${{ needs.config.outputs.kc-version }}
    if: ${{ needs.config.outputs.backend == 'true' }}
    permissions:
      contents: read
      packages: write

  frontend:
    uses: ./.github/workflows/frontend.yml
    needs:
        - config
    with:
        base-tag: ${{ needs.config.outputs.base-tag }}
        image-name-prefix: ${{ needs.config.outputs.image-name-prefix }}
        image-name-suffix: frontend
        node-version: ${{ needs.config.outputs.node-version }}
        volto-version: ${{ needs.config.outputs.volto-version }}
    if: ${{ needs.config.outputs.frontend == 'true' }}
    permissions:
      contents: read
      packages: write

  deploy:
    name: "Deploy: plone-intranet.kitconcept.dev"
    uses: kitconcept/meta/.github/workflows/deploy.yml@main
    if: ${{ github.event_name != 'pull_request' && github.ref_name == 'main' }}
    needs:
      - config
      - backend
      - frontend
    with:
      tag: ${{ needs.config.outputs.base-tag }}
      environment: "plone-intranet.kitconcept.dev"
      stack-name: "plone-intranet-kitconcept-dev"
      stack-file: "devops/stacks/demo.yml"
      registry: "ghcr.io"
      username: ${{ github.actor }}
    secrets:
      password: ${{ secrets.GITHUB_TOKEN }}
      remote-host: ${{ secrets.DEPLOY_HOST }}
      remote-port: ${{ secrets.DEPLOY_PORT }}
      remote-user: ${{ secrets.DEPLOY_USER }}
      remote-private-key: ${{ secrets.DEPLOY_SSH }}
      env-file: |
          IMAGE_NAME_PREFIX=${{ needs.config.outputs.image-name-prefix }}
          IMAGE_TAG=${{ github.ref_name }}
          STACK_NAME=${{ vars.STACK_NAME }}
          STACK_PREFIX=${{ vars.STACK_PREFIX }}
          HOSTNAME=${{ vars.HOSTNAME }}
          CERTRESOLVER=${{ vars.CERTRESOLVER }}

    permissions:
        contents: read
        packages: write
