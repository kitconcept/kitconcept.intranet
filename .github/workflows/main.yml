name: "kitconcept.intranet: CI"
description: "Main workflow for kitconcept.intranet"

on:
  push:
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/backend.yml"
      - ".github/workflows/frontend.yml"
      - ".github/workflows/main.yml"
      - "devops/**"
  workflow_dispatch:

jobs:

  config:
    name: "Config: Compute values used in workflow"
    uses: ./.github/workflows/config.yml

  backend:
    uses: ./.github/workflows/backend.yml
    needs:
        - config
    with:
        base-tag: ${{ needs.config.outputs.base-tag }}
        image-name-prefix: ${{ needs.config.outputs.image-name-prefix }}
        image-name-suffix: backend
        python-version: ${{ needs.config.outputs.python-version }}
        plone-version: ${{ needs.config.outputs.plone-version }}
    if: ${{ needs.config.outputs.backend == 'true' }}
    permissions:
      contents: read
      packages: write

  frontend:
    uses: ./.github/workflows/frontend.yml
    needs:
        - config
    with:
        base-tag: ${{ needs.config.outputs.base-tag }}
        image-name-prefix: ${{ needs.config.outputs.image-name-prefix }}
        image-name-suffix: frontend
        node-version: ${{ needs.config.outputs.node-version }}
        volto-version: ${{ needs.config.outputs.volto-version }}
    if: ${{ needs.config.outputs.frontend == 'true' }}
    permissions:
      contents: read
      packages: write

  deploy:
    name: "Deploy: ${{ needs.config.outputs.hostname }}"
    uses: kitconcept/meta/.github/workflows/deploy.yml@main
    if: ${{ always() && github.ref == 'refs/heads/main' && !contains(needs.*.result, 'failure') }}
    needs:
      - config
      - backend
      - frontend
    with:
        tag: ${{ github.ref_name }}
        environment: ${{ needs.config.outputs.environment }}
        stack-name: ${{ needs.config.outputs.stack-name }}
        stack-file: ${{ needs.config.outputs.stack-file }}
        registry: "ghcr.io"
        username: ${{ github.actor }}
    secrets:
        password: ${{ secrets.GITHUB_TOKEN }}
        remote-host: ${{ secrets.DEPLOY_HOST }}
        remote-port: ${{ secrets.DEPLOY_PORT }}
        remote-user: ${{ secrets.DEPLOY_USER }}
        remote-private-key: ${{ secrets.DEPLOY_SSH }}
        env-file: |
            IMAGE_NAME_PREFIX=${{ needs.config.outputs.image-name-prefix }}
            IMAGE_TAG=${{ github.ref_name }}
            STACK_NAME=${{ needs.config.outputs.stack-name }}
            STACK_PREFIX=${{ needs.config.outputs.stack-prefix }}
            HOSTNAME=${{ needs.config.outputs.hostname }}
            CERTRESOLVER=${{ needs.config.outputs.certresolver }}
    permissions:
        contents: read
        packages: write
