name: Acceptance tests
on:
  workflow_call:
    inputs:
      node-version:
        type: string
        required: true
      working-directory:
        type: string
        required: false
        default: '.'

env:
  CYPRESS_RETRIES: 2

jobs:
  acceptance:
    name: Acceptance tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: Main checkout
        uses: actions/checkout@v4

      - name: Setup codebase
        uses: plone/meta/.github/actions/setup_frontend@2.x
        with:
          node-version: ${{ inputs.node-version }}
          working-directory: ${{ inputs.working-directory }}

      - name: Cache Cypress Binary
        id: cache-cypress-binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: binary-${{ inputs.node-version }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install Cypress if not in cache
        if: steps.cache-cypress-binary.outputs.cache-hit != 'true'
        working-directory: frontend/core/packages/volto
        shell: bash
        run: |
          make cypress-install

      - uses: JarvusInnovations/background-action@v1
        name: Start Servers
        with:
          run: |
            make ci-acceptance-backend-start &
            make acceptance-frontend-prod-start &
            wait
          # your step-level and job-level environment variables are available to your commands as-is
          # npm install will count towards the wait-for timeout
          # whenever possible, move unrelated scripts to a different step
          # to background multiple processes: add & to the end of the command

          wait-on: |
            http-get://localhost:55001/plone
            http://localhost:3000
          # IMPORTANT: to use environment variables in wait-on, you must use this form: ${{ env.VAR }}
          # See wait-on section below for all resource types and prefixes

          tail: true # true = stderr,stdout
          # This will allow you to monitor the progress live

          log-output-resume: stderr
          # Eliminates previously output stderr log entries from post-run output

          wait-for: 10m

          log-output: stderr,stdout # same as true

          log-output-if: failure

      - name: Run acceptance tests
        shell: bash
        run: |
          make ci-acceptance-test

      # Upload Cypress screenshots
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-acceptance
          path: acceptance/cypress/screenshots

      # Upload Cypress videos
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos-acceptance
          path: acceptance/cypress/videos